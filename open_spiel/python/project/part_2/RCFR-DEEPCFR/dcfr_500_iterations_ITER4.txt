# game: kuhn_poker 
# eval_every: 10 
# num_iterations: 500 
# num_traversals: 200 
# policy_network_layers: (16, 16, 16, 16, 16, 16, 16) 
# advantage_network_layers: (16, 16, 16, 16, 16, 16, 16) 
# learning_rate: 0.01 
# batch_size_advantage: 2048 
# batch_size_strategy: None 
# memory_capacity: 1000000.0 
# 
1.000000000000000000e+00
1.000000000000000000e+01
2.000000000000000000e+01
3.000000000000000000e+01
4.000000000000000000e+01
5.000000000000000000e+01
6.000000000000000000e+01
7.000000000000000000e+01
8.000000000000000000e+01
9.000000000000000000e+01
1.000000000000000000e+02
1.100000000000000000e+02
1.200000000000000000e+02
1.300000000000000000e+02
1.400000000000000000e+02
1.500000000000000000e+02
1.600000000000000000e+02
1.700000000000000000e+02
1.800000000000000000e+02
1.900000000000000000e+02
2.000000000000000000e+02
2.100000000000000000e+02
2.200000000000000000e+02
2.300000000000000000e+02
2.400000000000000000e+02
2.500000000000000000e+02
2.600000000000000000e+02
2.700000000000000000e+02
2.800000000000000000e+02
2.900000000000000000e+02
3.000000000000000000e+02
3.100000000000000000e+02
3.200000000000000000e+02
3.300000000000000000e+02
3.400000000000000000e+02
3.500000000000000000e+02
3.600000000000000000e+02
3.700000000000000000e+02
3.800000000000000000e+02
3.900000000000000000e+02
4.000000000000000000e+02
4.100000000000000000e+02
4.200000000000000000e+02
4.300000000000000000e+02
4.400000000000000000e+02
4.500000000000000000e+02
4.600000000000000000e+02
4.700000000000000000e+02
4.800000000000000000e+02
4.900000000000000000e+02
5.000000000000000000e+02
